---

- name: check python
  raw: test -e /usr/bin/python
  changed_when: false
  failed_when: false
  register: check_python

- name: install python
  raw: yum -y install python
  when: check_python.rc != 0

- name: install pip
  package:
    name: python-pip
    state: present

- name: check if docker is installed
  command: docker --version
  register: docker_installed
  failed_when: "'command not found' in docker_installed.stdout"

- name: get docker
  shell: curl -sSL https://get.docker.com/ | sh
  when: docker_installed.rc != 0

- name: add user to docker group
  shell: usermod -aG docker $(whoami)

# - name: ensure docker is running properly
#   command: service docker restart

- name: check if node is installed
  command: node --version
  register: node_installed
  failed_when: "'command not found' in node_installed.stdout"

- name: yum install make
  shell: yum install -y gcc-c++ make
  when: node_installed.rc != 0

- name: get stable release nodejs
  shell: curl -sL https://rpm.nodesource.com/setup_12.x | sudo -E bash -
  when: node_installed.rc != 0

- name: install nodejs
  shell: yum install nodejs
  when: node_installed.rc != 0

- name: install docker-compose
  pip:
    name: docker-compose
    state: present

- name: check if awx repo exists
  stat:
    path: "{{awx_location}}"
  register: repo_exists

- name: clone repo
  git:
    repo: git@github.com:ansible/awx.git
    dest: "{{awx_location}}"
    accept_hostkey: yes
  when: repo_exists.stat.exists == false

- name: edit awxcompose location
  lineinfile:
    path: "{{awx_location}}/installer/inventory"
    regexp: '^docker_compose_dir='
    line: "docker_compose_dir={{awxcompose_location}}"

- name: edit pgdocker location
  lineinfile:
    path: "{{awx_location}}/installer/inventory"
    regexp: '^postgres_data_dir='
    line: "postgres_data_dir={{pgdocker_location}}"

# - name: run the installer
#     command: "ansible-playbook -i inventory install.yml"
#     args:
#       chdir: "{{awx_location}}/installer"
